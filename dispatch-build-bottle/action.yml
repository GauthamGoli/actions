name: Dispatch build bottle
inputs:
  formula:
    description: "Formula name"
    required: true
  issue:
    description: "Issue number, where comment on failure would be posted"
    required: true
  ignore-errors:
    description: "Ignore errors (default: false)"
    required: false
  macos:
    description: "macOS Version"
    required: false
  name:
    description: "Name"
    required: false
  sender:
    description: "Sender"
    required: true
  upload:
    description: "Whether to upload built bottles or not (default: false)"
    required: false
runs:
  using: "composite"
  steps:
    - name: ${{ inputs.formula }}
      id: print_details
      run: |
        echo formula=${{ inputs.formula }}
        echo sender=${{ inputs.sender }}
        echo name=${{ inputs.name }}
        echo ignore-errors=${{ inputs.ignore_errors }}
        echo version=${{ inputs.macos }}
        echo issue=${{ inputs.issue }}
        echo upload=${{ inputs.upload }}
        echo "::set-output name=repo::$(brew --repo ${{github.repository}})"

    - name: Set up Homebrew
      id: set-up-homebrew
      uses: Homebrew/actions/setup-homebrew@master

    - name: Run brew test-bot --only-cleanup-before
      if: github.repository == 'Homebrew/homebrew-core'
      id: test-bot-only-cleanup-before
      run: brew test-bot --only-cleanup-before

    - name: Run brew test-bot --only-setup
      if: github.repository == 'Homebrew/homebrew-core'
      id: test-bot-only-setup
      run: brew test-bot --only-setup

    - name: Build bottles
      if: always()
      env:
        HOMEBREW_GITHUB_API_TOKEN: ${{secrets.GITHUB_TOKEN}}
      run: |
        mkdir ~/bottles
        cd ~/bottles
        brew test-bot \
          --only-formulae \
          --keep-old \
          --skip-recursive-dependents \
          --only-json-tab \
          ${{ inputs.formula }}

    - name: Output brew test-bot --keep-old --only-json-tab failures
      if: github.repository == 'Homebrew/hombrew-core'
      run: |
        cat ~/bottles/steps_output.txt
        rm ~/bottles/steps_output.txt

    - name: Output brew bottle result
      if: github.repository == 'Homebrew/hombrew-core'
      run: |
        cat ~/bottles/bottle_output.txt
        rm ~/bottles/bottle_output.txt

    - name: Upload logs
      if: github.repository == 'Homebrew/hombrew-core' && failure()
      uses: actions/upload-artifact@main
      with:
        name: logs
        path: bottles/logs

    - name: Delete logs and home
      if: always()
      run: |
        rm -rvf bottles/logs
        rm -rvf bottles/home

    - name: Count bottles
      id: bottles
      if: always()
      run: |
        cd bottles
        count=$(ls *.json | wc -l | xargs echo -n)
        echo "$count bottles"
        echo "::set-output name=count::$count"

    - name: Upload bottles to GitHub Actions
      if: always() && steps.bottles.outputs.count > 0
      uses: actions/upload-artifact@main
      with:
        name: bottles
        path: bottles

    - name: Run brew test-bot --only-cleanup-after
      if: github.repository == 'Homebrew/homebrew-core'
      run: brew test-bot --only-cleanup-after

    - name: Post Cleanup
      if: always()
      run: rm -rvf bottles

    - name: Post comment on failure
      if: ${{!success() && inputs.issue > 0}}
      uses: Homebrew/actions/post-comment@master
      with:
        token: ${{secrets.HOMEBREW_GITHUB_PUBLIC_REPO_TOKEN}}
        issue: ${{inputs.issue}}
        body: ":x: @${{github.actor}} bottle request for ${{inputs.formula}} [failed](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}})."
        bot_body: ":x: Bottle request for ${{inputs.formula}} [failed](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}})."
        bot: BrewTestBoT